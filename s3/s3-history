#!/usr/bin/env bash

set -euo pipefail
shopt -s inherit_errexit

main() {
  parse_args "$@"

  [[ -v obj_url ]] || usage "S3 object url (-b) required"
  authed_with_aws || usage "Not authenticated with AWS.  Did you forget aws-vault?"

  [[ -v start ]] && echo "Start: $(date -d "@$start")"
  [[ -v end ]]   && echo "End:   $(date -d "@$end")"

  me=$(basename "$0")
  bucket=$(echo "$obj_url" | cut -f 3 -d /)
  object=$(echo "$obj_url" | cut -f 4- -d /)

  # shellcheck disable=SC2207
  version_ids=($(aws s3api list-object-versions --bucket "$bucket" --prefix "$object" --no-paginate --output=json | jq -r "$(jq_query)"))

  (
    cd "$(mktemp -d "/tmp/$me.XXX")"

    for newer_index in "${!version_ids[@]}"; do
      older_index=$((newer_index+1))
      if [[ -v "version_ids[older_index]" ]]; then
        newer_id="${version_ids[newer_index]}"
        older_id="${version_ids[older_index]}"

        newer_date=$(aws s3api get-object --output=text --query='LastModified' --bucket "$bucket" --key "$object" --version-id "$newer_id" newer)
                 _=$(aws s3api get-object --output=text --query='LastModified' --bucket "$bucket" --key "$object" --version-id "$older_id" older)

        echo "Date: $newer_date"

        diff -y --color=always --suppress-common-lines older newer || true
        echo
      fi
    done
  )
}

parse_args() {
  while getopts ":hs:e:o:" opt; do
    case ${opt} in
      s )
        start=$(date -d "$OPTARG 00:00:00" +'%s')
        ;;
      e )
        end=$(date -d "$OPTARG 23:59:59" +'%s')
        ;;
      o )
        obj_url=$OPTARG
        ;;
      h )
        usage
        ;;
      \? )
        usage "Invalid option: $OPTARG" 1>&2
        ;;
      : )
        usage "Invalid option: $OPTARG requires an argument" 1>&2
        ;;
    esac
  done
  shift $((OPTIND -1))
}

jq_query() {
  local j
  j=".Versions[]"
  [[ -v start ]] && j="$j | select(.LastModified | sub(\"\\\\.[0-9]+Z\"; \"Z\") | fromdate > $start)"
  [[ -v end ]] && j="$j | select(.LastModified | sub(\"\\\\.[0-9]+Z\"; \"Z\") | fromdate < $end)"
  j="$j | .VersionId"
  echo "$j"
}

authed_with_aws() {
  aws sts get-caller-identity --output text > /dev/null 2>&1
}

usage() {
  [[ $# -gt 0 ]] && echo "ERROR: $*"
  local me=$(basename "$0")
  cat <<-EOF

  USAGE: $me -o OBJECT_URL [-s START_DATE] [-e END_DATE]

  Queries S3 version history for an object, showing the date and diff for each
  version.

  OPTIONS:

    -o       Object URL (ie: s3://bucket/path/to/object)
    -s       Start date (ie: 2020-01-21)
    -e       End date (ie: 2020-01-21)

  Examples:

    $me -b s3://bucket/path/to/file -s 2000-01-20
	EOF
  exit 1
}

main "$@"
